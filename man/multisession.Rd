% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multisession.R
\name{multisession}
\alias{multisession}
\title{Create a multisession future whose value will be resolved asynchroneously in a parallel R session}
\usage{
multisession(expr, envir = parent.frame(), substitute = TRUE,
  maxCores = availableCores(), ...)
}
\arguments{
\item{expr}{An R \link[base]{expression}.}

\item{envir}{The \link{environment} in which the evaluation
is done and from which globals are obtained.}

\item{substitute}{If TRUE, argument \code{expr} is
\code{\link[base]{substitute}()}:ed, otherwise not.}

\item{maxCores}{The maximum number of multisession future that
can be active at the same time before blocking.}

\item{\dots}{Not used.}
}
\value{
A \link{ClusterFuture}.
}
\description{
A multisession future is a future that uses multisession evaluation,
which means that its \emph{value is computed and resolved in
parallel in another R session}.
}
\details{
This function will block if all available R session are occupied
and will be unblocked as soon as one of the already running
multisession futures is resolved.  For the total number of
R sessions available including the current/main R process, see
\code{\link{availableCores}()}.

The preferred way to create an multisession future is not to call
this function directly, but to register it via
\code{\link{plan}(multisession)} such that it becomes the default
mechanism for all futures.  After this \code{\link{future}()}
and \code{\link{\%<=\%}} will create \emph{multisession futures}.
}

